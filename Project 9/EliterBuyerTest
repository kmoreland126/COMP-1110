import org.junit.Assert;
//import static org.junit.Assert.*;
//import org.junit.Before;
import org.junit.Test;

/**
* EliteBuyer Test.
*
* Project 9
* @author Kate Moreland - Fundamentals of Computing 1 - COMP1210-001
* @version 4-5-23
*/
public class EliteBuyerTest {
      
      /** Acct method test. */
   @Test public void acctNumberTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      eb.setAcctNumber("12345");
      Assert.assertEquals("Get Acct #", "12345", eb.getAcctNumber());
   }
   
   /** Name method test. */
   @Test public void nameTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      eb.setName("Moreland, Kate");
      Assert.assertEquals("Get Name", "Moreland, Kate", eb.getName());
   }
   
   /** Purchases methods. */
   @Test public void purchasesTest() {
      double[] testPurchases = {34.5, 100.0};
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      
      eb.setPurchases(34.5, 100.0);
      Assert.assertEquals("purchases array", eb.purchases, eb.getPurchases());
      Assert.assertEquals("Total purchases", 127.775, eb.calcSubtotal(), 0.001);
      
      eb.addPurchases(63.50, 300.0);
      Assert.assertEquals("add purchases", eb.purchases, eb.getPurchases());
      Assert.assertEquals("Total purchases", 473.1, eb.calcSubtotal(), 0.001);
      
      eb.deletePurchase(63.50);
      Assert.assertEquals("delete purchase", eb.purchases, eb.getPurchases());
      Assert.assertEquals("Total purchases", 412.775, eb.calcSubtotal(), 0.001);
      
      eb.deletePurchases(34.5, 300.0);
      Assert.assertEquals("delete purchases", eb.purchases, eb.getPurchases());
      Assert.assertEquals("total purchases", 95, eb.calcSubtotal(), 0.0001);
   }
   
   /** calcSubtotal method. */
   @Test public void calcSubtotalTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      eb.setPurchases(34.5, 100.0);
      Assert.assertEquals("calcSubtotal test", 127.775, eb.calcSubtotal(),
         0.0001);
   }
   
   /** calcTotal method. */
   @Test public void calcTotalTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      eb.setPurchases(34.5, 100.0);
      Assert.assertEquals("calcTotal test", 137.99699999999999,
         eb.calcTotal(), 0.0001);
   }
   
   /** calcAwardPoints method. */
   @Test public void calcAwardPointsTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      eb.setPurchases(34.5, 100.0);
      Assert.assertEquals("Award points test", 1270, eb.calcAwardPoints());
      eb.addPurchases(1);
      Assert.assertEquals("Award points test", 1280, eb.calcAwardPoints());
   }
   
   /** toString method. */
   @Test public void toStringTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      eb.addPurchases(34.5, 100.0, 63.50, 300.0);
      Assert.assertEquals("String test", true, eb.toString().contains(
         "Elite Buyer\nAcctNo/Name: 10002 Jones, Pat"
         + "\nSubtotal: $473.10"
         + "\nTax: $37.85"
         + "\nTotal: $510.95"
         + "\nAward Points: 4730"
         + "\n(includes 0.05 discount rate applied to Subtotal)"));
   }
   
   /** Discount Rate Test. */
   @Test public void discountRateTest() {
      EliteBuyer eb = new EliteBuyer("10002", "Jones, Pat");
      Assert.assertEquals("rate test 1", 0.05, eb.getDiscountRate(), 0.0001);
      eb.setDiscountRate(0.10);
      Assert.assertEquals("rate test 2", 0.10, eb.getDiscountRate(), 0.0001);
   }

   /** Fixture initialization (common initialization
    *  for all tests).
   @Before public void setUp() {
   } */


   /** A test that always fails. 
   @Test public void defaultTest() {
      Assert.assertEquals("Default test added by jGRASP. Delete "
            + "this test once you have added your own.", 0, 1);
   }*/
}
